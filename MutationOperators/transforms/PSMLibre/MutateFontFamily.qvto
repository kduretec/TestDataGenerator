import m2m.qvt.oml.ExampleJavaLib;

modeltype PSM uses PSMLibre('http://benchmarkdp.datagenerator.model.PSMLibre');


transformation MutateFontFamily(inout model:PSM);
configuration property fontFamily : String;

main() {
	var doc := model.objectsOfType(Document);
	var elements := doc.pages.elements;
	var font:FontFamily; 
	
	if (fontFamily <> null) {
		switch {
			case (fontFamily="LiberationMono") font:=FontFamily::LIBERATIONMONO;
			case (fontFamily="LiberationSerif") font:=FontFamily::LIBERATIONSERIF;
			else null;
		};
	} else {
		var rnd := getRandomBetween(1,2);
		switch {
			case (rnd=1) font:=FontFamily::LIBERATIONMONO;
			case (rnd=2) font:=FontFamily::LIBERATIONSERIF;
			else null;
		};		
	};
	
	elements->forEach(el | el.oclIsKindOf(TextContainer)) {
		el.oclAsType(TextContainer)->map ChangeFontFamily(font);

	}
}

mapping inout TextContainer::ChangeFontFamily(in ff:PSM::FontFamily) {
	self.fontFamily := ff;
}
