import m2m.qvt.oml.ExampleJavaLib;

modeltype PIM uses PIM('http://benchmarkdp.datagenerator.model.PIM');
	
transformation AddParagraph(inout model:PIM);
configuration property wordcount : String;
configuration property pagecount : String;
main() {
	var pages:= model.objectsOfType(Page);
	if (pages->size() > 0) {
		var wc := stringToInt(wordcount);
		var pc := stringToInt(pagecount);
		var numPar1 := pc * 3;
		var numPar2real := wc / 250;
		var numPar : Integer; 
		var numPar2 := numPar2real.round() + 1;
		if (numPar1 > numPar2) {
			numPar := numPar1;
		} else {
			numPar := numPar2;
		};
		if (numPar > wc) {
			numPar := wc;
		};
		// try to put on each page at least one paragraph
		var i:= 1;
		while (numPar > 0 and i <= pages->size()) {
			var page := pages->asSequence()->at(i);
			page->map AddParagraph(numPar);
			numPar := numPar - 1;
			i := i + 1;		
		};
		
		// put remaining paragraphs to random pages
		while (numPar > 0) {
			var pos := getRandom(pages->size());
			var page := pages->asSequence()->at(pos);
			page->map AddParagraph(numPar);
			numPar := numPar - 1;		
		};	
	}
	

}

mapping inout PIM::Page::AddParagraph(inout i:Integer) {
	var par := object Paragraph {
		ID := generateUID();
	};
	var ranPos : Integer;
	var elSize := self.elements->size();
	if (elSize > 0) {
		ranPos := getRandomBetween(1,elSize)
	} else {
		ranPos := 1;
	};
	self.elements := self.elements->insertAt(ranPos, par);
}
