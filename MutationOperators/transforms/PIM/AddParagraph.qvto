import m2m.qvt.oml.ExampleJavaLib;

modeltype PIM uses PIM('http://benchmarkdp.datagenerator.model.PIM');
	
transformation AddParagraph(inout model:PIM);
configuration property numParag : String; 

main() {
	var pages:= model.objectsOfType(Page);
	var pc := 0; 
	
	if (numParag <> null) {
		pc := stringToInt(numParag)
	} else {
		var rn := getRandomReal();
		switch {
			case (rn < 0.018) pc := getRandomBetween(1,5); 
			case (rn >= 0.018 and rn < 0.15) pc := getRandomBetween(6,20);
			case (rn >= 0.15 and rn < 0.54) pc := getRandomBetween(21,100);
			case (rn >= 0.54 and rn < 0.95) pc := getRandomBetween(101,1000);
			case (rn >= 0.95 and rn < 1) pc := getRandomBetween(1001,2000);
			else null; 
		};
	};
	
	// try to put on each page at least one paragraph
	var i:= 1;
	while (pc > 0 and i <= pages->size()) {
		var page := pages->asSequence()->at(i);
		page->map AddParagraph(pc);
		pc := pc - 1;
		i := i + 1;		
	};
	
	// put remaining paragraphs to random pages
	while (pc > 0) {
		var pos := getRandom(pages->size());
		var page := pages->asSequence()->at(pos);
		page->map AddParagraph(pc);
		pc := pc - 1;		
	};	

}

mapping inout PIM::Page::AddParagraph(inout i:Integer) {
	var par := object Paragraph {
		ID := generateUID();
	};
	var ranPos : Integer;
	var elSize := self.elements->size();
	if (elSize > 0) {
		ranPos := getRandomBetween(1,elSize)
	} else {
		ranPos := 1;
	};
	self.elements := self.elements->insertAt(ranPos, par);
}
