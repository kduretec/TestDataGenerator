import m2m.qvt.oml.ExampleJavaLib;

modeltype PIM uses PIM('http://benchmarkdp.datagenerator.model.PIM');
	

transformation AddTable(inout model:PIM);
configuration property tablecount : String;
main() {
	var tc := stringToInt(tablecount);
	var pages:= model.objectsOfType(Page); 
	
	while (tc > 0) {
		var pos := getRandom(pages->size());
		var page := pages->asSequence()->at(pos);
		page->map AddTable(tc);
		tc := tc - 1;		
	}
	
}


mapping inout PIM::Page::AddTable(inout i:Integer) {

	var nR:Integer := getRandomBetween(2,15);
	var nC:Integer := getRandomBetween(2,8);
	
	var r:Integer := 1;
	
	var tab := object Table {
		numRows := nR;
		numCol := nC;
		while (r <= nR) {
			var c:Integer := 1;
			var tmpRow := object Row {
				while (c <= nC) {
					var tmpCell := object Cell {
				 		var parag := object Paragraph {};
				 		if (r=1) {
				 			map AddWord(parag);
				 		} else {
				 			map AddNumber(parag);
				 		};
				 		element += parag;
					};
					c := c + 1;
					cell += tmpCell;
				};
			};
			row += tmpRow;
			r := r + 1;
		};
	}; 

 
	var pos:Integer;
	if (self.elements->size()=0) {
		pos:=1;
	} else {
		pos := getRandom(self.elements->size());
	};
	//self.elements += tab;
	self.elements := self.elements->asSequence()->insertAt(pos,tab);
}


mapping AddWord(inout par:PIM::Paragraph) {
	var w := object Word {
		value := getRandomWord();
	};
	par.words += w;
}

mapping AddNumber(inout par:PIM::Paragraph) {
	var w := object Word {
		value := getRandom(100).toString();
	};
	par.words += w;
}